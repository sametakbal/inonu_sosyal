CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
create table users(
	id uuid DEFAULT uuid_generate_v4(),
	first_name varchar(255) not null,
	last_name varchar(255) not null,
	username varchar(255) not null unique,
	email varchar(255) not null unique,
	password varchar(255) not null unique,
	gender varchar(16) not null,
	urole varchar(16) not null,
	phone varchar(16),
	locked boolean default false,
	enabled boolean default false,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP,
	deleted_at TIMESTAMP,
	primary key(id)
);

create table confirmation_token(
	id serial primary key not null,
	token varchar(255) not null,
	expires_at TIMESTAMP,
	confirmed_at TIMESTAMP,
	user_id uuid,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP,
	deleted_at TIMESTAMP,
	CONSTRAINT fk_user_id
      	FOREIGN KEY(user_id) 
	  REFERENCES users(id) on delete cascade
);

create table groups(
	id uuid DEFAULT uuid_generate_v4(),
	group_icon varchar(255),
	title varchar(255) not null,
	description varchar(1000) not null,
	founder uuid,
	last_update TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	primary key(id),
   	CONSTRAINT fk_founder
      	FOREIGN KEY(founder) 
	  REFERENCES users(id) on delete cascade
);

create table message(
	id uuid DEFAULT uuid_generate_v4(),
	content varchar(255) not null,
	sender uuid,
	receiver uuid,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	primary key(id),
	CONSTRAINT fk_sender
      	FOREIGN KEY(sender) 
	  REFERENCES users(id) on delete cascade,
	CONSTRAINT fk_receiver
      	FOREIGN KEY(receiver) 
	  REFERENCES users(id) on delete cascade
);

create table post(
	id uuid DEFAULT uuid_generate_v4(),
	content text,
	owner uuid,
	publish_time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	group_id uuid,
	primary key(id),
	CONSTRAINT fk_owner
      	FOREIGN KEY(owner) 
	  REFERENCES users(id) on delete cascade,
	CONSTRAINT fk_group
      	FOREIGN KEY(group_id) 
	  REFERENCES groups(id) on delete cascade
);

create table media(
	id uuid DEFAULT uuid_generate_v4(),
	name varchar(255) not null,
	url varchar(255) not null,
	post_id uuid,
	primary key(id),
	CONSTRAINT fk_post
      	FOREIGN KEY(post_id) 
	  REFERENCES post(id) on delete cascade
);

create table comment(
	id uuid DEFAULT uuid_generate_v4(),
	owner uuid not null,
	content varchar(1000),
	post_id uuid,
	reply_id uuid,
	publish_time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	primary key(id),
	CONSTRAINT fk_owner
      	FOREIGN KEY(owner) 
	  REFERENCES users(id) on delete cascade,
	CONSTRAINT fk_post
      	FOREIGN KEY(post_id) 
	  REFERENCES post(id) on delete cascade
);


create table group_users(
	group_id uuid,
	user_id uuid,
	last_update TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT fk_group
      	FOREIGN KEY(group_id) 
	  REFERENCES groups(id) on delete cascade,
	FOREIGN KEY(user_id) 
	  REFERENCES users(id) on delete cascade
);

create table users_followers(
	user_id uuid,
	follower_id uuid,
	last_update TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT fk_user
      	FOREIGN KEY(user_id) 
	  REFERENCES users(id) on delete cascade,
	FOREIGN KEY(follower_id)
		REFERENCES users(id) on delete cascade
);


//Example Queries
select * from message where (sender='8f45827f-b3a5-4924-82de-476c93f6a7ea' and receiver='b8f2840b-ec96-4237-a0c4-49b700494786')
                         or (sender='b8f2840b-ec96-4237-a0c4-49b700494786' and receiver='8f45827f-b3a5-4924-82de-476c93f6a7ea');
